function [vf] = pwimY(v,p,Ao,M,N,m,n,dx)
% Calculates the pressure weighted interpolation of cell face values
% assuming a uniform grid. Near-boundary faces are handled as a special
% case, actual boundary faces are zero.

% Initialize matrix
vf = zeros(M+1,N);

%% Interior boundaries
% Inlet
i=m+3:M-1; j=1:n;
vf(i,j) = ( v(i-1,j)+v(i,j) )/2 ...
	+ ( ...
		(p(i+1,j)-p(i-1,j))./(2*Ao(i,j)) ...
		+ (p(i,j)-p(i-2,j))./(2*Ao(i-1,j)) ...
		- (1./Ao(i,j)+1./Ao(i-1,j)).*(p(i,j)-p(i-1,j)) ...
	)*dx/2;

% Main pipe
i=3:M-1; j=n+1:N;
vf(i,j) = ( v(i-1,j)+v(i,j) )/2 ...
	+ ( ...
		(p(i+1,j)-p(i-1,j))./(2*Ao(i,j)) ...
		+ (p(i,j)-p(i-2,j))./(2*Ao(i-1,j)) ...
		- (1./Ao(i,j)+1./Ao(i-1,j)).*(p(i,j)-p(i-1,j)) ...
	)*dx/2;

%% Near-bottom boundaries
% Inlet floor
i=m+2; j=1:n;
vf(i,j) = ( v(i-1,j)+v(i,j) )/2 ...
	+ ( ...
		(p(i+1,j)-p(i-1,j))./(2*Ao(i,j)) ...
		+ (p(i,j)-p(i-1,j))./(2*Ao(i-1,j)) ...
		- (1./Ao(i,j)+1./Ao(i-1,j)).*(p(i,j)-p(i-1,j)) ...
	)*dx/2;

% Main pipe floor
i=2; j=n+1:N;
vf(i,j) = ( v(i-1,j)+v(i,j) )/2 ...
	+ ( ...
		(p(i+1,j)-p(i-1,j))./(2*Ao(i,j)) ...
		+ (p(i,j)-p(i-1,j))./(2*Ao(i-1,j)) ...
		- (1./Ao(i,j)+1./Ao(i-1,j)).*(p(i,j)-p(i-1,j)) ...
	)*dx/2;

%% Near-top boundaries
% Ceiling
i=M; j=1:N;
vf(i,j) = ( v(i-1,j)+v(i,j) )/2 ...
	+ ( ...
		(p(i,j)-p(i-1,j))./(2*Ao(i,j)) ...
		+ (p(i,j)-p(i-2,j))./(2*Ao(i-1,j)) ...
		- (1./Ao(i,j)+1./Ao(i-1,j)).*(p(i,j)-p(i-1,j)) ...
	)*dx/2;

%% Bottom boundaries
% Inlet floor
i=m+1; j=1:n;
vf(i,j) = 0;		% Redundant safety

% Main pipe floor
i=1; j=n+1:N;
vf(i,j) = 0;		% Redundant safety

%% Top boundaries
% Ceiling
i=M+1; j=1:N;
vf(i,j) = 0;		% Redundant safety