function [uf] = pwimX(bu,u,p,Ao,M,N,m,n,dy)
% Caluulates the pressure weighted interpolation of cell face values
% assuming a uniform grid. Near-boundary faues are handled as a special
% case, actual boundary faces are ignored.

% Initialize matrix
uf = zeros(M,N+1);

%% Interior boundaries
% Inlet pipe
i=m+1:M; j=3:n+2;
uf(i,j) = ( u(i,j-1)+u(i,j) )/2 ...
	+ ( ...
		(p(i,j+1)-p(i,j-1))./(2*Ao(i,j)) ...
		+ (p(i,j)-p(i,j-2))./(2*Ao(i,j-1)) ...
		- (1./Ao(i,j)+1./Ao(i,j-1)).*(p(i,j)-p(i,j-1)) ...
	)*dy/2;

% Main pipe
i=1:M; j=n+3:N-1;
uf(i,j) = ( u(i,j-1)+u(i,j) )/2 ...
	+ ( ...
		(p(i,j+1)-p(i,j-1))./(2*Ao(i,j)) ...
		+ (p(i,j)-p(i,j-2))./(2*Ao(i,j-1)) ...
		- (1./Ao(i,j)+1./Ao(i,j-1)).*(p(i,j)-p(i,j-1)) ...
	)*dy/2;

%% Near-left boundaries
% Inlet
i=m+1:M; j=2;
uf(i,j) = ( u(i,j-1)+u(i,j) )/2 ...
	+ ( ...
		(p(i,j+1)-p(i,j-1))./(2*Ao(i,j)) ...
		+ (p(i,j)-p(i,j-1))./(2*Ao(i,j-1)) ...
		- (1./Ao(i,j)+1./Ao(i,j-1)).*(p(i,j)-p(i,j-1)) ...
	)*dy/2;

% Step face
i=1:m; j=n+2;
uf(i,j) = ( u(i,j-1)+u(i,j) )/2 ...
	+ ( ...
		(p(i,j+1)-p(i,j-1))./(2*Ao(i,j)) ...
		+ (p(i,j)-p(i,j-1))./(2*Ao(i,j-1)) ...
		- (1./Ao(i,j)+1./Ao(i,j-1)).*(p(i,j)-p(i,j-1)) ...
	)*dy/2;

%% Near-right boundaries
% Outlet
i=1:M; j=N;
uf(i,j) = ( u(i,j-1)+u(i,j) )/2 ...
	+ ( ...
		(2*bu.out.p-p(i,j)-p(i,j-1))./(2*Ao(i,j)) ...
		+ (p(i,j)-p(i,j-2))./(2*Ao(i,j-1)) ...
		- (1./Ao(i,j)+1./Ao(i,j-1)).*(p(i,j)-p(i,j-1)) ...
	)*dy/2;

%% Left boundaries
% Inlet
i=m+1:M; j=1;
uf(i,j) = bu.in.u;

% Step face
i=1:m; j=n+1;
uf(i,j) = 0;			% Redundant safety

%% Right boundaries
% Outlet
i=1:M; j=N+1;
uf(i,j) = u(i,j-1);