function [] = temp(dx,dt,Mx,My)
    tic;
    dy = dx;
    X = -100:dx:100;
    Y = -100:dy:100;
    [x, y] = meshgrid(X,Y);
    time_itr_max = 1200; 
%     filename = [num2str(length(X)),' x ',num2str(length(Y)), ' Mx', strrep(num2str(Mx),'.','_'), ' My',strrep(num2str(My),'.','_')];
    g = figure;
    
    %Boundary condition coefficients
    theta = atan2(y,x);
    r = sqrt(x.^2+y.^2);
    V = Mx*cos(theta)+My*sin(theta)+sqrt(1-(Mx*sin(theta)-My*cos(theta)).^2);
    A = V.*cos(theta);
    B = V.*sin(theta);
    C = V./(2*r); 
    
    %3rd order optimized time discretization coefficients (b0, b1, b2, b3)
    b = [2.3025580883830 -2.4910075998482 1.5743409331815 -0.38589142217162];
    plot_times = [1 100:100:1200 1600 2000 12000];

    %itialize variables
    rho = zeros(length(x),length(y),4);
    u = rho; v = rho; p = rho;
    
    rho(:,:,4) = 0.01*exp(-log(2)*(x.^2+y.^2)/9)+0.001*exp(-log(2)*((x-67).^2+y.^2)/25);
    u(:,:,4) = 0.0004*y.*exp(-log(2)*((x-67).^2+y.^2)/25);
    v(:,:,4) = -0.0004*(x-67).*exp(-log(2)*((x-67).^2+y.^2)/25);
    p(:,:,4) = 0.01*exp(-log(2)*(x.^2+y.^2)/9);
    
    if exist(num2str(date),'file') ~= 7
        mkdir(pwd,num2str(date));
    end
    cd(num2str(date));
    h = waitbar(0,'Calculating...');
    for i = 1:time_itr_max %time step loop
        waitbar(i/time_itr_max,h,['i = ',num2str(i)]);
        %density step - interior nodes
        rhoswitchi = rho(:,:,4);
        for k=1:4
            rhoswitchi = rhoswitchi+(dt*b(k))*(NumericalDerivative(1,6,dx,-(Mx*rho(:,:,4)+u(:,:,5-i)),'-DRP')+NumericalDerivative(1,6,dy,-(My*rho(:,:,5-i)+v(:,:,5-i))','-DRP')');
        end
%         rhoswitchi = rho(:,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(Mx*rho(:,:,4)+u(:,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(My*rho(:,:,4)+v(:,:,4))','-DRP')')...
%                                     +b(2)*(NumericalDerivative(1,6,dx,-(Mx*rho(:,:,3)+u(:,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(My*rho(:,:,3)+v(:,:,3))','-DRP')')...
%                                     +b(3)*(NumericalDerivative(1,6,dx,-(Mx*rho(:,:,2)+u(:,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(My*rho(:,:,2)+v(:,:,2))','-DRP')')...
%                                     +b(4)*(NumericalDerivative(1,6,dx,-(Mx*rho(:,:,1)+u(:,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(My*rho(:,:,1)+v(:,:,1))','-DRP')'));
        %density step - left boundary (radiation)
        rhoswitchl = rho(:,1:7,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*rho(:,1:7,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*rho(:,1:7,4))','-DRP')'-C(:,1:7).*rho(:,1:7,4))...
                                        +b(2)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*rho(:,1:7,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*rho(:,1:7,3))','-DRP')'-C(:,1:7).*rho(:,1:7,3))...
                                        +b(3)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*rho(:,1:7,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*rho(:,1:7,2))','-DRP')'-C(:,1:7).*rho(:,1:7,2))...
                                        +b(4)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*rho(:,1:7,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*rho(:,1:7,1))','-DRP')'-C(:,1:7).*rho(:,1:7,1)));
        if Mx == 0
            %density step - right boundary (radiation)
            rhoswitchr = rho(:,end-6:end,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*rho(:,end-6:end,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*rho(:,end-6:end,4))','-DRP')'-C(:,end-6:end).*rho(:,end-6:end,4))...
                                        +b(2)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*rho(:,end-6:end,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*rho(:,end-6:end,3))','-DRP')'-C(:,end-6:end).*rho(:,end-6:end,3))...
                                        +b(3)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*rho(:,end-6:end,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*rho(:,end-6:end,2))','-DRP')'-C(:,end-6:end).*rho(:,end-6:end,2))...
                                        +b(4)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*rho(:,end-6:end,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*rho(:,end-6:end,1))','-DRP')'-C(:,end-6:end).*rho(:,end-6:end,1)));
        else
            %density step - right boundary (outflow)
            rhoswitchr = rho(:,end-6:end,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-Mx*rho(:,end-6:end,4)-A(:,end-6:end).*p(:,end-6:end,4)+Mx*p(:,end-6:end,4),'-DRP')+NumericalDerivative(1,6,dy,(-My*rho(:,end-6:end,4)-B(:,end-6:end).*p(:,end-6:end,4)+My*p(:,end-6:end,4))','-DRP')'-C(:,end-6:end).*p(:,end-6:end,4))...
                                            +b(2)*(NumericalDerivative(1,6,dx,-Mx*rho(:,end-6:end,3)-A(:,end-6:end).*p(:,end-6:end,3)+Mx*p(:,end-6:end,3),'-DRP')+NumericalDerivative(1,6,dy,(-My*rho(:,end-6:end,3)-B(:,end-6:end).*p(:,end-6:end,3)+My*p(:,end-6:end,3))','-DRP')'-C(:,end-6:end).*p(:,end-6:end,3))...
                                            +b(3)*(NumericalDerivative(1,6,dx,-Mx*rho(:,end-6:end,2)-A(:,end-6:end).*p(:,end-6:end,2)+Mx*p(:,end-6:end,2),'-DRP')+NumericalDerivative(1,6,dy,(-My*rho(:,end-6:end,2)-B(:,end-6:end).*p(:,end-6:end,2)+My*p(:,end-6:end,2))','-DRP')'-C(:,end-6:end).*p(:,end-6:end,2))...
                                            +b(4)*(NumericalDerivative(1,6,dx,-Mx*rho(:,end-6:end,1)-A(:,end-6:end).*p(:,end-6:end,1)+Mx*p(:,end-6:end,1),'-DRP')+NumericalDerivative(1,6,dy,(-My*rho(:,end-6:end,1)-B(:,end-6:end).*p(:,end-6:end,1)+My*p(:,end-6:end,1))','-DRP')'-C(:,end-6:end).*p(:,end-6:end,1)));
        end
        %density step - bottom boundary (radiation)
%         rhoswitchb = rho(end-6:end,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*rho(end-6:end,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*rho(end-6:end,:,4))','-DRP')'-C(end-6:end,:).*rho(end-6:end,:,4))...
%                                         +b(2)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*rho(end-6:end,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*rho(end-6:end,:,3))','-DRP')'-C(end-6:end,:).*rho(end-6:end,:,3))...
%                                         +b(3)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*rho(end-6:end,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*rho(end-6:end,:,2))','-DRP')'-C(end-6:end,:).*rho(end-6:end,:,2))...
%                                         +b(4)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*rho(end-6:end,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*rho(end-6:end,:,1))','-DRP')'-C(end-6:end,:).*rho(end-6:end,:,1)));
        rhoswitchb = rho(end-6:end,:,4);
        for k=1:4
            rhoswitchb = rhoswitchb +(dt*b(k))*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*rho(end-6:end,:,5-k)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*rho(end-6:end,:,5-k))','-DRP')'-C(end-6:end,:).*rho(end-6:end,:,5-k));
        end
        if My == 0
            %density step - top boundary (radiation)
            rhoswitcht = rho(1:7,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*rho(1:7,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*rho(1:7,:,4))','-DRP')'-C(1:7,:).*rho(1:7,:,4))...
                                        +b(2)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*rho(1:7,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*rho(1:7,:,3))','-DRP')'-C(1:7,:).*rho(1:7,:,3))...
                                        +b(3)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*rho(1:7,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*rho(1:7,:,2))','-DRP')'-C(1:7,:).*rho(1:7,:,2))...
                                        +b(4)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*rho(1:7,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*rho(1:7,:,1))','-DRP')'-C(1:7,:).*rho(1:7,:,1)));
        else
            %density step - top boundary (outflow)
            rhoswitcht = rho(1:7,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-Mx*rho(1:7,:,4)-A(1:7,:).*p(1:7,:,4)+Mx*p(1:7,:,4),'-DRP')+NumericalDerivative(1,6,dy,(-My*rho(1:7,:,4)-B(1:7,:).*p(1:7,:,4)+My*p(1:7,:,4))','-DRP')'-C(1:7,:).*p(1:7,:,4))...
                                        +b(2)*(NumericalDerivative(1,6,dx,-Mx*rho(1:7,:,3)-A(1:7,:).*p(1:7,:,3)+Mx*p(1:7,:,3),'-DRP')+NumericalDerivative(1,6,dy,(-My*rho(1:7,:,3)-B(1:7,:).*p(1:7,:,3)+My*p(1:7,:,3))','-DRP')'-C(1:7,:).*p(1:7,:,3))...
                                        +b(3)*(NumericalDerivative(1,6,dx,-Mx*rho(1:7,:,2)-A(1:7,:).*p(1:7,:,2)+Mx*p(1:7,:,2),'-DRP')+NumericalDerivative(1,6,dy,(-My*rho(1:7,:,2)-B(1:7,:).*p(1:7,:,2)+My*p(1:7,:,2))','-DRP')'-C(1:7,:).*p(1:7,:,2))...
                                        +b(4)*(NumericalDerivative(1,6,dx,-Mx*rho(1:7,:,1)-A(1:7,:).*p(1:7,:,1)+Mx*p(1:7,:,1),'-DRP')+NumericalDerivative(1,6,dy,(-My*rho(1:7,:,1)-B(1:7,:).*p(1:7,:,1)+My*p(1:7,:,1))','-DRP')'-C(1:7,:).*p(1:7,:,1)));
        end
                                    
        
        rhonew = [rhoswitcht(1:3,:);rhoswitchl(4:end-3,1:3) rhoswitchi(4:end-3,4:end-3) rhoswitchr(4:end-3,5:end); rhoswitchb(5:end,:)];  
        rho(:,:,1:3) = rho(:,:,2:4); %shift matrix to advance time step
        rho(:,:,4) = rhonew;
        
        %u velocity step - interior nodes
        uswitchi = u(:,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(Mx*u(:,:,4)+p(:,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(:,:,4))','-DRP')')...
                                +b(2)*(NumericalDerivative(1,6,dx,-(Mx*u(:,:,4)+p(:,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(:,:,4))','-DRP')')...
                                +b(3)*(NumericalDerivative(1,6,dx,-(Mx*u(:,:,4)+p(:,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(:,:,4))','-DRP')')...
                                +b(4)*(NumericalDerivative(1,6,dx,-(Mx*u(:,:,4)+p(:,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(:,:,4))','-DRP')'));
        %u velocity step - left boundary (radiation)
        uswitchl = u(:,1:7,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*u(:,1:7,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*u(:,1:7,4))','-DRP')'-C(:,1:7).*u(:,1:7,4))...
                                    +b(2)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*u(:,1:7,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*u(:,1:7,3))','-DRP')'-C(:,1:7).*u(:,1:7,3))...
                                    +b(3)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*u(:,1:7,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*u(:,1:7,2))','-DRP')'-C(:,1:7).*u(:,1:7,2))...
                                    +b(4)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*u(:,1:7,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*u(:,1:7,1))','-DRP')'-C(:,1:7).*u(:,1:7,1)));
        if Mx == 0
            %u velocity step - right boundary (radiation)
            uswitchr = u(:,end-6:end,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*u(:,end-6:end,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*u(:,end-6:end,4))','-DRP')'-C(:,end-6:end).*u(:,end-6:end,4))...
                                    +b(2)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*u(:,end-6:end,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*u(:,end-6:end,3))','-DRP')'-C(:,end-6:end).*u(:,end-6:end,3))...
                                    +b(3)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*u(:,end-6:end,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*u(:,end-6:end,2))','-DRP')'-C(:,end-6:end).*u(:,end-6:end,2))...
                                    +b(4)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*u(:,end-6:end,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*u(:,end-6:end,1))','-DRP')'-C(:,end-6:end).*u(:,end-6:end,1)));
        else
            %u velocity step - right boundary (outflow)
            uswitchr = u(:,end-6:end,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(Mx*u(:,end-6:end,4)+p(:,end-6:end,4)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(:,end-6:end,4))','-DRP')')...
                                        +b(2)*(NumericalDerivative(1,6,dx,-(Mx*u(:,end-6:end,3)+p(:,end-6:end,3)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(:,end-6:end,3))','-DRP')')...
                                        +b(3)*(NumericalDerivative(1,6,dx,-(Mx*u(:,end-6:end,2)+p(:,end-6:end,2)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(:,end-6:end,2))','-DRP')')...
                                        +b(4)*(NumericalDerivative(1,6,dx,-(Mx*u(:,end-6:end,1)+p(:,end-6:end,1)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(:,end-6:end,1))','-DRP')'));
        end
        %u step - bottom boundary (radiation)
%         uswitchb = u(end-6:end,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*u(end-6:end,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*u(end-6:end,:,4))','-DRP')'-C(end-6:end,:).*u(end-6:end,:,4))...
%                                         +b(2)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*u(end-6:end,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*u(end-6:end,:,3))','-DRP')'-C(end-6:end,:).*u(end-6:end,:,3))...
%                                         +b(3)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*u(end-6:end,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*u(end-6:end,:,2))','-DRP')'-C(end-6:end,:).*u(end-6:end,:,2))...
%                                         +b(4)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*u(end-6:end,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*u(end-6:end,:,1))','-DRP')'-C(end-6:end,:).*u(end-6:end,:,1)));
        uswitchb = u(end-6:end,:,4);
        for k=1:4
            uswitchb = uswitchb +(dt*b(k))*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*u(end-6:end,:,5-k)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*u(end-6:end,:,5-k))','-DRP')'-C(end-6:end,:).*u(end-6:end,:,5-k));
        end
        if My == 0
            %u velocity step - top boundary (radiation)
            uswitcht = u(1:7,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*u(1:7,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*u(1:7,:,4))','-DRP')'-C(1:7,:).*u(1:7,:,4))...
                                        +b(2)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*u(1:7,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*u(1:7,:,3))','-DRP')'-C(1:7,:).*u(1:7,:,3))...
                                        +b(3)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*u(1:7,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*u(1:7,:,2))','-DRP')'-C(1:7,:).*u(1:7,:,2))...
                                        +b(4)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*u(1:7,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*u(1:7,:,1))','-DRP')'-C(1:7,:).*u(1:7,:,1)));
        else
            %u velocity step - top boundary (outflow)
            uswitcht = u(1:7,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(Mx*u(1:7,:,4)+p(1:7,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(1:7,:,4))','-DRP')')...
                                        +b(2)*(NumericalDerivative(1,6,dx,-(Mx*u(1:7,:,3)+p(1:7,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(1:7,:,3))','-DRP')')...
                                        +b(3)*(NumericalDerivative(1,6,dx,-(Mx*u(1:7,:,2)+p(1:7,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(1:7,:,2))','-DRP')')...
                                        +b(4)*(NumericalDerivative(1,6,dx,-(Mx*u(1:7,:,1)+p(1:7,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(My*u(1:7,:,1))','-DRP')'));
        end
        unew = [uswitcht(1:3,:);uswitchl(4:end-3,1:3) uswitchi(4:end-3,4:end-3) uswitchr(4:end-3,5:end); uswitchb(5:end,:)];
        u(:,:,1:3) = u(:,:,2:4);
        u(:,:,4) = unew;
        
        %v velocity step - interior nodes
        vswitchi = v(:,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(Mx*v(:,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(:,:,4)+p(:,:,4))','-DRP')')...
                                +b(2)*(NumericalDerivative(1,6,dx,-(Mx*v(:,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(:,:,3)+p(:,:,3))','-DRP')')...
                                +b(3)*(NumericalDerivative(1,6,dx,-(Mx*v(:,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(:,:,2)+p(:,:,2))','-DRP')')...
                                +b(4)*(NumericalDerivative(1,6,dx,-(Mx*v(:,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(:,:,1)+p(:,:,1))','-DRP')'));
        %v velocity step - left boundary (radiation)
        vswitchl = v(:,1:7,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*v(:,1:7,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*v(:,1:7,4))','-DRP')'-C(:,1:7).*v(:,1:7,4))...
                                    +b(2)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*v(:,1:7,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*v(:,1:7,3))','-DRP')'-C(:,1:7).*v(:,1:7,3))...
                                    +b(3)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*v(:,1:7,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*v(:,1:7,2))','-DRP')'-C(:,1:7).*v(:,1:7,2))...
                                    +b(4)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*v(:,1:7,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*v(:,1:7,1))','-DRP')'-C(:,1:7).*v(:,1:7,1)));
        if Mx == 0
            %v velocity step - left boundary (radiation)
            vswitchr = v(:,end-6:end,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*v(:,end-6:end,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*v(:,end-6:end,4))','-DRP')'-C(:,end-6:end).*v(:,end-6:end,4))...
                                    +b(2)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*v(:,end-6:end,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*v(:,end-6:end,3))','-DRP')'-C(:,end-6:end).*v(:,end-6:end,3))...
                                    +b(3)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*v(:,end-6:end,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*v(:,end-6:end,2))','-DRP')'-C(:,end-6:end).*v(:,end-6:end,2))...
                                    +b(4)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*v(:,end-6:end,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*v(:,end-6:end,1))','-DRP')'-C(:,end-6:end).*v(:,end-6:end,1)));
        else               
            %v velocity step - right boundary (outflow)
            vswitchr = v(:,end-6:end,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(Mx*v(:,end-6:end,4)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(:,end-6:end,4)+p(:,end-6:end,4))','-DRP')')...
                                        +b(2)*(NumericalDerivative(1,6,dx,-(Mx*v(:,end-6:end,3)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(:,end-6:end,3)+p(:,end-6:end,3))','-DRP')')...
                                        +b(3)*(NumericalDerivative(1,6,dx,-(Mx*v(:,end-6:end,2)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(:,end-6:end,2)+p(:,end-6:end,2))','-DRP')')...
                                        +b(4)*(NumericalDerivative(1,6,dx,-(Mx*v(:,end-6:end,1)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(:,end-6:end,1)+p(:,end-6:end,1))','-DRP')'));
        end
        %v step - bottom boundary (radiation)
%         vswitchb = v(end-6:end,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*v(end-6:end,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*v(end-6:end,:,4))','-DRP')'-C(end-6:end,:).*v(end-6:end,:,4))...
%                                         +b(2)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*v(end-6:end,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*v(end-6:end,:,3))','-DRP')'-C(end-6:end,:).*v(end-6:end,:,3))...
%                                         +b(3)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*v(end-6:end,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*v(end-6:end,:,2))','-DRP')'-C(end-6:end,:).*v(end-6:end,:,2))...
%                                         +b(4)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*v(end-6:end,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*v(end-6:end,:,1))','-DRP')'-C(end-6:end,:).*v(end-6:end,:,1)));
        vswitchb = v(end-6:end,:,4);
        for k=1:4
            vswitchb = vswitchb +(dt*b(k))*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*v(end-6:end,:,5-k)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*v(end-6:end,:,5-k))','-DRP')'-C(end-6:end,:).*v(end-6:end,:,5-k));
        end
        if My ==0
            %v velocity step - top boundary (radiation)
            vswitcht = v(1:7,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*v(1:7,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*v(1:7,:,4))','-DRP')'-C(1:7,:).*v(1:7,:,4))...
                                        +b(2)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*v(1:7,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*v(1:7,:,3))','-DRP')'-C(1:7,:).*v(1:7,:,3))...
                                        +b(3)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*v(1:7,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*v(1:7,:,2))','-DRP')'-C(1:7,:).*v(1:7,:,2))...
                                        +b(4)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*v(1:7,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*v(1:7,:,1))','-DRP')'-C(1:7,:).*v(1:7,:,1)));
        else
            %v velocity step - top boundary (outflow)
            vswitcht = v(1:7,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(Mx*v(1:7,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(1:7,:,4)+p(1:7,:,4))','-DRP')')...
                                        +b(2)*(NumericalDerivative(1,6,dx,-(Mx*v(1:7,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(1:7,:,3)+p(1:7,:,3))','-DRP')')...
                                        +b(3)*(NumericalDerivative(1,6,dx,-(Mx*v(1:7,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(1:7,:,2)+p(1:7,:,2))','-DRP')')...
                                        +b(4)*(NumericalDerivative(1,6,dx,-(Mx*v(1:7,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(My*v(1:7,:,1)+p(1:7,:,1))','-DRP')'));
        end
        vnew = [vswitcht(1:3,:);vswitchl(4:end-3,1:3) vswitchi(4:end-3,4:end-3) vswitchr(4:end-3,5:end); vswitchb(5:end,:)];
        v(:,:,1:3) = v(:,:,2:4);
        v(:,:,4) = vnew;
        
        %pressure step - interior nodes
        pswitchi = p(:,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(Mx*p(:,:,4)+u(:,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(My*p(:,:,4)+v(:,:,4))','-DRP')')...
                                +b(2)*(NumericalDerivative(1,6,dx,-(Mx*p(:,:,3)+u(:,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(My*p(:,:,3)+v(:,:,3))','-DRP')')...
                                +b(3)*(NumericalDerivative(1,6,dx,-(Mx*p(:,:,2)+u(:,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(My*p(:,:,2)+v(:,:,2))','-DRP')')...
                                +b(4)*(NumericalDerivative(1,6,dx,-(Mx*p(:,:,1)+u(:,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(My*p(:,:,1)+v(:,:,1))','-DRP')'));
        %pressure step - left boundary (radiation)
        pswitchl = p(:,1:7,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*p(:,1:7,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*p(:,1:7,4))','-DRP')'-C(:,1:7).*p(:,1:7,4))...
                                    +b(2)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*p(:,1:7,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*p(:,1:7,3))','-DRP')'-C(:,1:7).*p(:,1:7,3))...
                                    +b(3)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*p(:,1:7,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*p(:,1:7,2))','-DRP')'-C(:,1:7).*p(:,1:7,2))...
                                    +b(4)*(NumericalDerivative(1,6,dx,-(A(:,1:7).*p(:,1:7,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,1:7).*p(:,1:7,1))','-DRP')'-C(:,1:7).*p(:,1:7,1)));
        %pressure step - right boundary (outflow)
        pswitchr = p(:,end-6:end,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*p(:,end-6:end,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*p(:,end-6:end,4))','-DRP')'-C(:,end-6:end).*p(:,end-6:end,4))...
                                        +b(2)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*p(:,end-6:end,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*p(:,end-6:end,3))','-DRP')'-C(:,end-6:end).*p(:,end-6:end,3))...
                                        +b(3)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*p(:,end-6:end,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*p(:,end-6:end,2))','-DRP')'-C(:,end-6:end).*p(:,end-6:end,2))...
                                        +b(4)*(NumericalDerivative(1,6,dx,-(A(:,end-6:end).*p(:,end-6:end,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(:,end-6:end).*p(:,end-6:end,1))','-DRP')'-C(:,end-6:end).*p(:,end-6:end,1)));
        %pressure step - bottom boundary (radiation)
%         pswitchb = p(end-6:end,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*p(end-6:end,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*p(end-6:end,:,4))','-DRP')'-C(end-6:end,:).*p(end-6:end,:,4))...
%                                         +b(2)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*p(end-6:end,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*p(end-6:end,:,3))','-DRP')'-C(end-6:end,:).*p(end-6:end,:,3))...
%                                         +b(3)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*p(end-6:end,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*p(end-6:end,:,2))','-DRP')'-C(end-6:end,:).*p(end-6:end,:,2))...
%                                         +b(4)*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*p(end-6:end,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*p(end-6:end,:,1))','-DRP')'-C(end-6:end,:).*p(end-6:end,:,1)));
        pswitchb = p(end-6:end,:,4);
        for k=1:4
            pswitchb = pswitchb +(dt*b(k))*(NumericalDerivative(1,6,dx,-(A(end-6:end,:).*p(end-6:end,:,5-k)),'-DRP')+NumericalDerivative(1,6,dy,-(B(end-6:end,:).*p(end-6:end,:,5-k))','-DRP')'-C(end-6:end,:).*p(end-6:end,:,5-k));
        end
        %pressure step - top boundary (radiation)
        pswitcht = p(1:7,:,4)+dt*(b(1)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*p(1:7,:,4)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*p(1:7,:,4))','-DRP')'-C(1:7,:).*p(1:7,:,4))...
                                        +b(2)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*p(1:7,:,3)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*p(1:7,:,3))','-DRP')'-C(1:7,:).*p(1:7,:,3))...
                                        +b(3)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*p(1:7,:,2)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*p(1:7,:,2))','-DRP')'-C(1:7,:).*p(1:7,:,2))...
                                        +b(4)*(NumericalDerivative(1,6,dx,-(A(1:7,:).*p(1:7,:,1)),'-DRP')+NumericalDerivative(1,6,dy,-(B(1:7,:).*p(1:7,:,1))','-DRP')'-C(1:7,:).*p(1:7,:,1)));
        pnew = [pswitcht(1:3,:);pswitchl(4:end-3,1:3) pswitchi(4:end-3,4:end-3) pswitchr(4:end-3,5:end); pswitchb(5:end,:)];                            
        p(:,:,1:3) = p(:,:,2:4);
        p(:,:,4) = pnew;                            
        
        figure(g);
        surf(X,Y,rho(:,:,4)); shading interp; view([45 45]);
%         if any(i == plot_times)
%             pcolor(X,Y,rho(:,:,end)); colorbar; shading interp; colormap(flipud(gray)); xlabel('x'); ylabel('y'); title(['Density contour for i = ',num2str(i),', dx = ', num2str(dx),', dt = ', num2str(dt)]);
%             saveas(gcf,['density_i',num2str(i),' ',filename],'fig');
%             
%             pcolor(X,Y,u(:,:,end)); colorbar; shading interp; colormap(flipud(gray)); xlabel('x'); ylabel('y'); title(['U velocity contour for i = ',num2str(i),', dx = ', num2str(dx),', dt = ', num2str(dt)]);
%             saveas(gcf,['u_i',num2str(i),' ', filename],'fig');
%             
%             pcolor(X,Y,v(:,:,end)); colorbar; shading interp; colormap(flipud(gray)); xlabel('x'); ylabel('y'); title(['V velocity contour for i = ',num2str(i),', dx = ', num2str(dx),', dt = ', num2str(dt)]);
%             saveas(gcf,['v_i',num2str(i),' ', filename],'fig');
%             
%             pcolor(X,Y,p(:,:,end)); colorbar; shading interp; colormap(flipud(gray)); xlabel('x'); ylabel('y'); title(['Pressure contour for i = ',num2str(i),', dx = ', num2str(dx),', dt = ', num2str(dt)]);
%             saveas(gcf,['p_i',num2str(i),' ', filename],'fig');
%             close all;
%         end
    end
    cd ..
    close(h);
    ctime = toc
end